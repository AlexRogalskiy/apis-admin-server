spring.application.name=API's Admin Server
spring.profiles.active=prod

#configurations to connect to self register the admin server as a client
spring.security.user.name=$SPRING_ADMIN_NAME
spring.security.user.password=$SPRING_ADMIN_PASSWORD
spring.boot.admin.username=${spring.security.user.name}
spring.boot.admin.password=${spring.security.user.password}

#configurations to give secured server info
spring.boot.admin.client.instance.metadata.user.name=${spring.security.user.name}
spring.boot.admin.client.instance.metadata.user.password=${spring.security.user.password}

spring.boot.admin.url=${server.ip}:${server.port}
spring.boot.admin.ui.title=${spring.application.name}
spring.boot.admin.ui.brand=<img src="assets/img/icon-spring-boot-admin.svg"><span>${spring.application.name}</span>

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Mail notifications
spring.mail.host=$MAIL_HOST
spring.mail.port=$MAIL_PORT
spring.mail.username=$MAIL_USERNAME
spring.mail.password=$MAIL_PASSWORD
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.boot.admin.notify.mail.to=$MAIL_NOTIFIER
spring.boot.admin.notify.mail.from=APIs Spring Boot Admin Server <noreply@${spring.mail.username}>
spring.boot.admin.notify.mail.enabled=true

#Telegram notifications
spring.boot.admin.notify.telegram.enabled=true
spring.boot.admin.notify.telegram.parse_mode=HTML
spring.boot.admin.notify.telegram.disable-notify=true
spring.boot.admin.notify.telegram.message=<strong>#{instance.registration.name}</strong>/#{instance.id} is <strong>#{event.statusInfo.status}</strong>

spring.boot.admin.notify.telegram.auth-token=$TELEGRAM_TOKEN
spring.boot.admin.notify.telegram.chat-id=$TELEGRAM_CHAT_ID